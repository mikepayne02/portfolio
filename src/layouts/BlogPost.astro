---
import Hero from '@/components/blog/Hero.astro'
import TOC from '@/components/blog/TOC.astro'
import Button from '@/components/Button.astro'
import type { CollectionEntry } from 'astro:content'

import LightBox from '@/components/LightboxPortal.astro'
import BaseLayout from './Base.astro'
import Comments from '@/components/blog/Comments.astro'

import MdiArrowLeft from '~icons/mdi/arrow-left'
import MdiChevronUp from '~icons/mdi/chevron-up'
import type { MarkdownHeading } from 'astro'

interface Props {
  project: CollectionEntry<'projects'>
  headings: MarkdownHeading[]
  minutesRead: string
}

const { project, headings, minutesRead } = Astro.props

const {
  data: { description, ogImage, ogManual, publishDate, title, updatedDate },
  id
} = project

const socialImage = ogManual ? ogImage : `/projects/${id}/og.png`
const articleDate = updatedDate?.toISOString() ?? publishDate.toISOString()
const targetUrl = new URL(Astro.url.pathname, Astro.site).href // Get current page URL
---

<BaseLayout
  meta={{ articleDate, description, ogImage: socialImage, title }}
  showViewCount={true}
>
  <LightBox />
  <div class='w-full'>
    <Button class='mb-8 max-w-fit' text='Back' href='/projects' style='button'>
      <MdiArrowLeft class='size-4' />
    </Button>

    <div class='gap-x-10 lg:flex lg:items-start'>
      {!!headings.length && <TOC headings={headings} />}

      <article class='grow break-words' data-pagefind-body>
        <div id='blog-hero'>
          <Hero {project} {minutesRead} />
        </div>

        <div
          class='prose prose-base prose-zinc text-muted-foreground dark:prose-invert prose-headings:font-medium prose-headings:text-foreground prose-headings:before:absolute prose-headings:before:-ms-4 prose-th:before:content-none mt-12'
        >
          <slot />

          <Comments {targetUrl} />
        </div>
      </article>
    </div>

    <button
      aria-label='Back to Top'
      class='bg-primary-foreground hover:bg-border/25 hover:text-foreground/75 border-input fixed end-4 bottom-8 z-90 flex size-8 translate-y-28 items-center justify-center rounded-full border text-3xl opacity-0 shadow-md transition duration-300 data-[show=true]:translate-y-0 data-[show=true]:opacity-100 sm:end-8 sm:h-12 sm:w-12'
      data-show='false'
      id='to-top-btn'
    >
      <MdiChevronUp class='size-6' />
    </button>
  </div>
</BaseLayout>

<script>
  const scrollBtn = document.getElementById('to-top-btn') as HTMLButtonElement
  const targetHeader = document.getElementById('blog-hero') as HTMLDivElement

  function callback(entries: IntersectionObserverEntry[]) {
    entries.forEach((entry) => {
      // only show the scroll to top button when the heading is out of view
      scrollBtn.dataset.show = (!entry.isIntersecting).toString()
    })
  }

  scrollBtn.addEventListener('click', () => {
    document.documentElement.scrollTo({ behavior: 'smooth', top: 0 })
  })

  const observer = new IntersectionObserver(callback)
  if (targetHeader) observer.observe(targetHeader)
</script>
