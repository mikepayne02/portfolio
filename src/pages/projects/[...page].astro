---
import Button from '@/components/Button.astro'
import CTA from '@/components/CTA.astro'
import Pagination from '@/components/Paginator.astro'
import PostPreview from '@/components/blog/PostPreview.astro'
import {
  getAllProjects,
  getUniqueTags,
  groupProjectsByYear,
  sortMDByDate
} from '@/utils/project'
import BaseLayout from '@/layouts/Base.astro'
import type { GetStaticPaths, Page } from 'astro'
import type { CollectionEntry } from 'astro:content'

import MdiArrowLeft from '~icons/mdi/arrow-left'
import MdiTagOutline from '~icons/mdi/tag-outline'
import MdiArrowRight from '~icons/mdi/arrow-right'

export const getStaticPaths = (async ({ paginate }) => {
  const MAX_POSTS_PER_PAGE = 10
  const allProjects = await getAllProjects()
  const allProjectsByDate = sortMDByDate(allProjects)
  const uniqueTags = getUniqueTags(allProjects)
  return paginate(allProjectsByDate, {
    pageSize: MAX_POSTS_PER_PAGE,
    props: { uniqueTags }
  })
}) satisfies GetStaticPaths

interface Props {
  page: Page<CollectionEntry<'projects'>>
  uniqueTags: string[]
}

const { page, uniqueTags } = Astro.props

const meta = {
  description:
    'Browse my collection of projects and the things that interest me',
  title: 'Projects'
}

const paginationProps = {
  ...(page.url.prev && {
    prevUrl: {
      text: `Previous Page`,
      url: page.url.prev
    }
  }),
  ...(page.url.next && {
    nextUrl: {
      text: `Next Page`,
      url: page.url.next
    }
  })
}

const groupedByYear = groupProjectsByYear(page.data)
const descYearKeys = Object.keys(groupedByYear).sort((a, b) => +b - +a)
---

<BaseLayout {meta}>
  <div class='w-full'>
    <Button text='Back' class='max-w-fit' href='/'>
      <MdiArrowLeft class='size-4' />
    </Button>

    <h1 class='mt-5 mb-6 text-2xl font-bold'>Projects</h1>
    {page.data.length === 0 && <p>No projects yet.</p>}

    {
      page.data.length > 0 && (
        <div class='grid gap-y-16 sm:grid-cols-[3fr_1fr] sm:gap-x-8'>
          <section aria-label='Projects list'>
            {descYearKeys.map((yearKey) => (
              <>
                <h2 class='title text-lg'>{yearKey}</h2>
                <ul class='mt-6 mb-8 space-y-4 text-start'>
                  {groupedByYear[yearKey]?.map((p) => (
                    <li class='grid gap-2 sm:grid-cols-[auto_1fr] sm:[&_q]:col-start-2'>
                      <PostPreview project={p} withDesc />
                    </li>
                  ))}
                </ul>
              </>
            ))}
            <Pagination {...paginationProps} />
          </section>
          {!!uniqueTags.length && (
            <aside>
              <h2 class='mb-4 flex items-center text-lg font-semibold'>
                <MdiTagOutline class='size-6' />
                Tags
              </h2>
              <ul class='text-bgColor flex flex-wrap gap-2'>
                {uniqueTags.map((tag) => (
                  <li>
                    <Button text={tag} href={`/tags/${tag}/`} style='pill' />
                  </li>
                ))}
              </ul>
              <span class='mt-4 block sm:text-end'>
                <a
                  aria-label='View all post categories'
                  class='inline-flex items-center'
                  href='/tags/'
                >
                  View all <MdiArrowRight class='mx-1 size-4' />
                </a>
              </span>
            </aside>
          )}
        </div>
      )
    }
  </div>
  <CTA className='mt-16'>Contact</CTA>
</BaseLayout>
